(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{101:function(t,s,a){t.exports=a.p+"assets/img/EA2EE24C-DBE0-4d8c-854E-8630449919ED.88c86786.png"},102:function(t,s,a){t.exports=a.p+"assets/img/26CC18A7-D94A-4d49-B8BA-CB6011FBA4AD.b6f1802a.png"},103:function(t,s,a){t.exports=a.p+"assets/img/6339F575-9992-4b48-B8B0-06703B978ADE.addbf2b4.png"},104:function(t,s,a){t.exports=a.p+"assets/img/B8825175-58DE-407b-9A10-7DDC1F5ECE85.0b8ddd07.png"},105:function(t,s,a){t.exports=a.p+"assets/img/337A0CF4-8179-4495-A482-80BBE4244D08.e55a5a45.png"},106:function(t,s,a){t.exports=a.p+"assets/img/C15A20AD-81CD-447f-8C20-EFA607C9FD16.ed22c75a.png"},107:function(t,s,a){t.exports=a.p+"assets/img/64FAD464-AFEC-4b7a-8752-E978111A1A04.9c4c5a00.png"},108:function(t,s,a){t.exports=a.p+"assets/img/73FF0F8A-4B2A-4472-9393-77B5BCC07882.403f8fd9.png"},128:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"缓存机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制"}},[t._v("#")]),t._v(" 缓存机制")]),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("浏览器缓存是一种简单高效的优化网页的方法。浏览器缓存策略能够缓存文件，\n减少网页的网络请求，提高性能，减少带宽消耗。")]),t._v(" "),n("p",[t._v("基本的网络请求就是三个步骤：网络请求，后端处理，浏览器响应。\n浏览器缓存能够帮助我们在第一步和第三步中进行性能优化。\n比如说：当发送请求时，已经有缓存了，或者说后端的数据与前面一致那么就没必要返回数据，这样就能减少数据响应。")]),t._v(" "),n("p",[t._v("接下来就来分析下浏览器缓存：缓存位置、缓存机制、用户行为对浏览器的影响以及前端缓存最佳实践。")]),t._v(" "),n("h2",{attrs:{id:"缓存位置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存位置"}},[t._v("#")]),t._v(" 缓存位置")]),t._v(" "),n("p",[t._v("浏览器会将缓存放在四个位置，并且有优先级。当浏览器四个位置中都没有缓存时，会发生网络请求。")]),t._v(" "),n("p",[t._v("位置顺序如下：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("Service Worker")])]),t._v(" "),n("li",[n("p",[t._v("Memory Cache")])]),t._v(" "),n("li",[n("p",[t._v("Disk Cache")])]),t._v(" "),n("li",[n("p",[t._v("Push Cache")])])]),t._v(" "),n("h3",{attrs:{id:"service-worker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" Service Worker")]),t._v(" "),n("p",[t._v("Service Woker 是运行在浏览器背后的独立线程，一般可以用来实现缓存。\n使用 Service Woker 必须采用 Https，因为 Service Woker 中涉及到请求拦截，所以必须用https来保障安全。\nService Woker的缓存与其他浏览器内置的缓存不同，它可以自由配置缓存哪些文件、如何匹配缓存、如何获取缓存、并且缓存是持续性的。")]),t._v(" "),n("p",[t._v("Service实现缓存一般分为三个步骤：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("注册Service Worker")])]),t._v(" "),n("li",[n("p",[t._v("监听install事件")])]),t._v(" "),n("li",[n("p",[t._v("缓存需要文件")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用 ServiceWorkerContainer.register()方法首次注册service worker。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("navigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        navigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./sw.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("registration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'该浏览器不支持Service Worker'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("再来看看具体作为service worker的文件sw.js，例子如下：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_VERSION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓存文件的版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_FILES")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要缓存的文件")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./test.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./app.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://code.jquery.com/jquery-3.0.0.min.js'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nself"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'install'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听worker的install事件")]),t._v("\n    event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitUntil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 延迟install事件直到缓存初始化完成")]),t._v("\n        caches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_VERSION")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cache")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'缓存打开'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_FILES")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nself"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'activate'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听worker的activate事件")]),t._v("\n    event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitUntil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 延迟activate事件直到")]),t._v("\n        caches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("keys")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_VERSION")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" caches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清除旧版本缓存")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nself"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 截取页面的资源请求")]),t._v("\n    event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("respondWith")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        caches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断缓存是否命中")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回缓存中的资源")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_request")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行请求备份操作")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_request")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用fetch请求线上资源")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误判断")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'basic'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" response "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建了一个响应对象的克隆,储藏在一个单独的变量中")]),t._v("\n\n        caches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_VERSION")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cache")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓存从线上获取的资源")]),t._v("\n            cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在下次用户访问就可以采用拦截的方式查询是否存在缓存，如果存在缓存则直接使用，否则发起请求。")]),t._v(" "),n("h3",{attrs:{id:"memory-cache"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#memory-cache"}},[t._v("#")]),t._v(" Memory Cache")]),t._v(" "),n("p",[t._v("Memory Cache是内存中的缓存, 读取速度快，但缓存持续时间短，随着进程的释放而释放。\n主要包含当前页面中抓取到的资源，例如页面上已经加载的图片、样式、脚本等。")]),t._v(" "),n("p",[t._v("内存缓存的实际场景：当访问一个页面，再刷新时，会发现很多数据都来自内存缓存。")]),t._v(" "),n("p",[t._v("如下图，看Sise: from memory cache：\n"),n("img",{attrs:{src:a(101),alt:"An image"}})]),t._v(" "),n("p",[t._v("内存缓存的实际释放场景：将浏览器标签关闭掉，那么此时内存中的缓存也就释放了。")]),t._v(" "),n("p",[t._v("内存缓存中有一块重要的缓存资源是"),n("code",[t._v("prefetch")]),t._v("相关指令下载的资源（"),n("link",{attrs:{rel:"prefetch"}}),t._v("）。\n它可以一边下载"),n("code",[t._v("css/js")]),t._v("资源一边请求网络请一个资源。")]),t._v(" "),n("p",[t._v("注意：内存缓存并不关心返回的HTTP响应头中的Cache-Control是什么值。\n资源也并非仅仅对URL做匹配，还有可能对Context-Type,Cors等其他特征做校验。")]),t._v(" "),n("h3",{attrs:{id:"disk-cache"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#disk-cache"}},[t._v("#")]),t._v(" Disk Cache")]),t._v(" "),n("p",[t._v("Disk Cache 是存储硬盘中的缓存，读取速度较Memory cache慢点，但存储各自资源，并且支持时间长。")]),t._v(" "),n("p",[t._v("在浏览器所有的缓存中，Disk Cahce被使用的最多。它可以根据请求头字段来判断是否能够读取缓存，\n判断哪些资源需要重新请求。即使在跨站点访问的时候，相同地址的资源一旦被存储在硬盘中，只要不过期\n就不再请求数据了。")]),t._v(" "),n("p",[t._v("浏览器会把哪些文件缓存进内存，哪些存进硬盘：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("大文件大概率存在硬盘中，反之存在内存中")])]),t._v(" "),n("li",[n("p",[t._v("使用率高的文件存在硬盘中，反之存在内存中。")])])]),t._v(" "),n("h3",{attrs:{id:"push-cache"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#push-cache"}},[t._v("#")]),t._v(" Push Cache")]),t._v(" "),n("p",[t._v("什么是 Push Cache?")]),t._v(" "),n("p",[t._v("Push Cache（推送缓存）是 HTTP/2 中的内容，当以上三种缓存都没有命中时，它才会被使用。它只在会话（Session）中存在，一旦会话结束就被释放，并且缓存时间也很短暂，在Chrome浏览器中只有5分钟左右，同时它也并非严格执行HTTP头中的缓存指令。")]),t._v(" "),n("p",[t._v("Push Cache 特征：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("所有的资源都能被推送，并且能够被缓存,但是 Edge 和 Safari 浏览器支持相对比较差")])]),t._v(" "),n("li",[n("p",[t._v("可以推送 no-cache 和 no-store 的资源")])]),t._v(" "),n("li",[n("p",[t._v("一旦连接被关闭，Push Cache 就被释放")])]),t._v(" "),n("li",[n("p",[t._v("多个页面可以使用同一个HTTP/2的连接，也就可以使用同一个Push Cache。这主要还是依赖浏览器的实现而定，出于对性能的考虑，有的浏览器会对相同域名但不同的tab标签使用同一个HTTP连接。")])]),t._v(" "),n("li",[n("p",[t._v("Push Cache 中的缓存只能被使用一次")])]),t._v(" "),n("li",[n("p",[t._v("浏览器可以拒绝接受已经存在的资源推送")])]),t._v(" "),n("li",[n("p",[t._v("你可以给其他域名推送资源")])]),t._v(" "),n("li",[n("p",[t._v("如果以上四种缓存都没有命中的话，那么只能发起请求来获取资源了。")])])]),t._v(" "),n("p",[t._v("通常浏览器缓存策略分为两种：强缓存和协商缓存，并且缓存策略都是通过设置 HTTP Header 来实现的。")]),t._v(" "),n("h2",{attrs:{id:"缓存过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存过程"}},[t._v("#")]),t._v(" 缓存过程")]),t._v(" "),n("p",[n("strong",[t._v("浏览器是怎么确定一个资源该不该缓存，如何缓存？")])]),t._v(" "),n("p",[t._v("浏览器第一次发送请求后将请求结果和缓存标记存入浏览器缓存中。")]),t._v(" "),n("p",[t._v("浏览器缓存处理时根据第一个请求返回的响应头来处理的。")]),t._v(" "),n("p",[t._v("具体缓存过程，如下图所示：\n"),n("img",{attrs:{src:a(102),alt:"An image"}})]),t._v(" "),n("p",[t._v("由上图，可知：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("浏览器每次发送请求，都会检查缓存中是否存在请求结果和缓存标识")])]),t._v(" "),n("li",[n("p",[t._v("浏览器每次获取到的请求结果都会被存入缓存中")])])]),t._v(" "),n("p",[t._v("根据浏览器是否向服务器重新发送请求缓存过程，还可分为两个部分："),n("strong",[t._v("强缓存")]),t._v(" 和 "),n("strong",[t._v("协商缓存")])]),t._v(" "),n("h2",{attrs:{id:"强缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),n("p",[t._v("强缓存不会向服务器发送请求，直接从缓存中读取资源。")]),t._v(" "),n("p",[t._v("实际场景：在chorme浏览器中打开控制台，点击NetWork选项中，然后F5刷新，可以看到请求返回Size: from memory cache 或者 from disk cache。\n强缓存可以通过设置HTTP Header实现：Expires 和 Cache-Control。")]),t._v(" "),n("h3",{attrs:{id:"expires"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" Expires")]),t._v(" "),n("p",[n("strong",[t._v("缓存过期时间，用来指定资源过期时间，是服务器的具体时间点")]),t._v("\n比如：Expires: max-age + 请求时间（需要配合Last-modified使用）。\nExpires是web服务器响应头字段，在响应HTTP请求时告诉浏览器在过期时间前可以从缓存中获取资源，而无需再次请求。")]),t._v(" "),n("p",[n("strong",[t._v("Expires 是 HTTP/1的产物，受限于本地时间，如果修改了本地时间，可能会造成缓存失效")])]),t._v(" "),n("p",[t._v("例子："),n("code",[t._v("Expires: Wed, 22 Oct 2020 08:41:00 GMT")]),t._v(" 表示资源会在 Wed, 22 Oct 2020 08:41:00 GMT 后过期，需要再次请求。")]),t._v(" "),n("h3",{attrs:{id:"cache-control"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),n("p",[t._v("Cache-Control是HTTP/1.1中的规则，主要用于控制网页缓存。比如："),n("code",[t._v("Cache-Control:max-age=300")]),t._v("表示在这个正确返回时间的五分钟内若再次发送请求则命中缓存。")]),t._v(" "),n("p",[t._v("Cache-Control 可以在请求头或者响应头中设置，并且可以组合使用多种指令：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(103),alt:"An image"}})]),t._v(" "),n("p",[t._v("public: "),n("strong",[t._v("所有内容都被缓存")]),t._v(" 具体来说响应可被任何一个节点缓存。例如：browset => proxy => proxy1 => Server，中间的proxy可以缓存。\n比如下次再请求同一资源的时候，proxy1可以直接把自己缓存的东西给proxy不用再向Server请求。")]),t._v(" "),n("p",[t._v("private： "),n("strong",[t._v("所有内容只有客户端可以缓存")]),t._v(" Cache-Control的默认取值。具体来说，表示中间节点不允许缓存。")]),t._v(" "),n("p",[t._v("no-cache： 客户端缓存内容，是否需要缓存则需要经过协商缓存来决定。\n表示不使用Cache-Control的缓存控制方式做前置方式，而是使用Etag或last-Modified字段来控制缓存。\n需要注意的是:no-cache这个名字有一点误导。\n设置了no-cache之后，并不是说浏览器就不再缓存数据，只是浏览器在使用缓存数据时，需要先确认一下数据是否还跟服务器保持一致。")]),t._v(" "),n("p",[t._v("no-store: 所有内容都不会被缓存，既不会使用强缓存也不会使用协商缓存。")]),t._v(" "),n("p",[t._v("max-age: max-age:xxx 表示缓存在xxx秒后失效。")]),t._v(" "),n("p",[t._v("s-maxage: 同 max-age 作用一样，只在代理服务器中生效。")]),t._v(" "),n("p",[t._v("max-state: 能容忍的最大时间。max-stale指令标示了客户端愿意接收一个已经过期了的响应。如果指定了max-stale的值，则最大容忍时间为对应的秒数。如果没有指定，那么说明浏览器愿意接收任何age的响应（age表示响应由源站生成或确认的时间与当前时间的差值）。")]),t._v(" "),n("p",[t._v("min-fresh：能够容忍的最小新鲜度。min-fresh标示了客户端不愿意接受新鲜度不多于当前的age加上min-fresh设定的时间之和的响应。")]),t._v(" "),n("h3",{attrs:{id:"expires和cache-control两者对比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#expires和cache-control两者对比"}},[t._v("#")]),t._v(" Expires和Cache-Control两者对比")]),t._v(" "),n("p",[t._v("Expires是HTTP/1的产物，Cache-Control是http1.1的产物。\n"),n("strong",[t._v("两者同时存在的话，Cache-Control优先于Expires")]),t._v("。\n在某些不支持HTTP1.1的环境下，Expires就会发挥用处。所以Expires其实是过时的产物，现阶段它的存在只是一种兼容性的写法。")]),t._v(" "),n("p",[t._v("强缓存判断是否缓存的依据来自于是否超出某个时间或者某个时间段，而不关心服务器端文件是否已经更新。\n这可能会导致加载文件不是服务器端最新的内容，那我们如何获知服务器端内容是否已经发生了更新呢？\n此时我们需要用到协商缓存策略。")]),t._v(" "),n("h2",{attrs:{id:"协商缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),n("p",[n("strong",[t._v("协商缓存是在强缓存失效后，浏览器携带缓存标识向服务器发起请求，有服务决定是否使用缓存的过程。")])]),t._v(" "),n("p",[t._v("协商缓存生效，返回304和Not Modified的过程如下图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(104),alt:"An image"}})]),t._v(" "),n("p",[t._v("协商缓存失效，返回200和请求结果:")]),t._v(" "),n("p",[n("img",{attrs:{src:a(105),alt:"An image"}})]),t._v(" "),n("p",[t._v("协商缓存通过两种HTTP Header 来设置：last-Modified 和 Etag")]),t._v(" "),n("h3",{attrs:{id:"last-modified和if-modified-since"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#last-modified和if-modified-since"}},[t._v("#")]),t._v(" Last-Modified和If-Modified-Since")]),t._v(" "),n("p",[t._v("浏览器在第一次请求资源的同时，在响应头中添加Last-Modified，值是服务器最后修改该资源的时间。\n浏览器接收到响应后缓存文件的header。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Last-Modified: Fri, 22 Jul 2016 01:47:00 GMT\n")])])]),n("p",[t._v("浏览器下次发起请求时，检测到有Last-Modified这个请求头字段，于是添加If-Modified-Since这个header，值是Last-Modified的值。\n服务器再次接收到请求时，对比If-Modified-Since中的值与服务器最后修改资源的时间。\n如果一致返回空的响应体和304，让浏览器在缓存中取。\n如果If-Modified-Since的时间小于服务器中这个资源的最后修改时间，说明文件有更新，于是返回新的资源文件和200。")]),t._v(" "),n("p",[t._v("但是 Last-Modified 存在一些弊端：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("如果本地打开缓存文件，即使没有对文件进行修改，但还是会造成Last-Modified被修改，服务端不能命中缓存导致\n发送相同的资源")])]),t._v(" "),n("li",[n("p",[t._v("因为Last-Modified 是以秒计的。如果在不可感知的时间内修改资源，那么服务器会认为命中缓存，不会传回正确的资源。")])])]),t._v(" "),n("p",[t._v("既然根据文件修改时间来决定是否缓存尚有不足，能否可以直接根据文件内容是否修改来决定缓存策略？\n所以在 HTTP / 1.1 出现了 ETag 和If-None-Match")]),t._v(" "),n("h3",{attrs:{id:"etag-和-if-none-match"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#etag-和-if-none-match"}},[t._v("#")]),t._v(" Etag 和 If-None-Match")]),t._v(" "),n("p",[t._v("Etag是服务器在响应请求时，返回当前资源文件的唯一标识，只要资源发生变化，Etag会重新生成。\n浏览器在接收到服务器传来的Etag并保存，在下次发起请求是将Etag的值放在request header里的\nIf-None-Match里，服务器只需对比该If-None-Match和该资源上的Etag是否一致。如果一致，则返回\n304通知浏览器直接从缓存中获取资源，否则返回200以及新资源（包括新的Etag）。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(106),alt:"An image"}})]),t._v(" "),n("h3",{attrs:{id:"两者之间对比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#两者之间对比"}},[t._v("#")]),t._v(" 两者之间对比")]),t._v(" "),n("p",[t._v("从精度，Etag要优于Last-Modified；")]),t._v(" "),n("p",[t._v("从性能上，Etag要逊于Last-Modified，Last-Modified只需要记录时间，而Etag需要通过算法生成不同的hash值。")]),t._v(" "),n("p",[t._v("从优先级上，Etag会被服务器优先考虑。")]),t._v(" "),n("h2",{attrs:{id:"缓存机制流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制流程"}},[t._v("#")]),t._v(" 缓存机制流程")]),t._v(" "),n("p",[t._v("强制缓存优先于协商缓存进行，若强制缓存(Expires和Cache-Control)生效则直接使用缓存。")]),t._v(" "),n("p",[t._v("若不生效则进行协商缓存(Last-Modified / If-Modified-Since和Etag / If-None-Match)。")]),t._v(" "),n("p",[t._v("协商缓存由服务器决定是否使用缓存，若协商缓存失效，那么代表该请求的缓存失效，返回200，重新返回资源和缓存标识，再存入浏览器缓存中；\n生效则返回304，继续使用缓存。")]),t._v(" "),n("p",[t._v("具体流程图如下：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(107),alt:"An image"}})]),t._v(" "),n("p",[t._v("如果什么缓存策略都没设置，那么浏览器会怎么处理？")]),t._v(" "),n("p",[t._v("对于这种情况，浏览器会采用一个启发式的算法，通常会取响应头中的 Date 减去 Last-Modified 值的 10% 作为缓存时间。")]),t._v(" "),n("h2",{attrs:{id:"用户行为对浏览器缓存的影响"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用户行为对浏览器缓存的影响"}},[t._v("#")]),t._v(" 用户行为对浏览器缓存的影响")]),t._v(" "),n("p",[t._v("所谓用户行为对浏览器缓存的影响，指的就是用户在浏览器如何操作时，会触发怎样的缓存策略。主要有 3 种：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("打开网页，地址栏输入地址： 查找 disk cache 中是否有匹配。如有则使用；如没有则发送网络请求。")])]),t._v(" "),n("li",[n("p",[t._v("普通刷新 (F5)：因为 TAB 并没有关闭，因此 memory cache 是可用的，会被优先使用(如果匹配的话)。其次才是 disk cache。")])]),t._v(" "),n("li",[n("p",[t._v("强制刷新 (Ctrl + F5)：浏览器不使用缓存，因此发送的请求头部均带有 Cache-control: no-cache(为了兼容，还带了 Pragma: no-cache),服务器直接返回 200 和最新内容。")])])]),t._v(" "),n("h2",{attrs:{id:"前端最佳实践"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端最佳实践"}},[t._v("#")]),t._v(" 前端最佳实践")]),t._v(" "),n("p",[t._v("缓存的意义就在于减少请求，给用户更好的体验的同时，也减轻服务器压力。\n所以，最佳实践就应该尽可能命中强缓存，同时在更新版本时让客户端的缓存失效。")]),t._v(" "),n("p",[t._v("在更新版本之后，如何让用户第一时间使用最新的资源文件呢？把静态资源的路径改了，这样就相当于第一次访问这些资源。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(108),alt:"An image"}})]),t._v(" "),n("p",[t._v("webpack可以让我们在打包的时候，在文件的命名上带上hash值。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("    entry"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        main"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./main.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        vendor"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'antd'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    output"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dist'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        publicPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/dist/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        filname"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bundle.[chunkhash].js'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("综上所述，我们可以得出一个较为合理的缓存方案：")]),t._v(" "),n("p",[t._v("HTML：使用协商缓存。\nCSS&JS&图片：使用强缓存，文件命名带上hash值。")]),t._v(" "),n("h3",{attrs:{id:"哈希"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#哈希"}},[t._v("#")]),t._v(" 哈希")]),t._v(" "),n("p",[t._v("webpack提供了三种哈希值计算方式，分别是hash、chunkhash和contenthash。那么这三者有什么区别呢？")]),t._v(" "),n("ol",[n("li",[t._v("hash：跟整个项目的构建相关，构建生成的文件hash值都是一样的，只要项目里有文件更改，整个项目构建的hash值都会更改。")]),t._v(" "),n("li",[t._v("chunkhash：根据不同的入口文件(Entry)进行依赖文件解析、构建对应的chunk，生成对应的hash值。")]),t._v(" "),n("li",[t._v("contenthash：由文件内容产生的hash值，内容不同产生的contenthash值也不一样。")])]),t._v(" "),n("p",[t._v("显然，我们是不会使用第一种的。改了一个文件，打包之后，其他文件的hash都变了，缓存自然都失效了。这不是我们想要的。")]),t._v(" "),n("p",[t._v("那chunkhash和contenthash的主要应用场景是什么呢？\n在实际在项目中，一般会把项目中的css都抽离出对应的css文件来加以引用。\n如果我们使用chunkhash，当我们改了css代码之后，会发现css文件hash值改变的同时，js文件的hash值也会改变。\n这时候，contenthash就派上用场了。")]),t._v(" "),n("h3",{attrs:{id:"前端实践总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端实践总结"}},[t._v("#")]),t._v(" 前端实践总结")]),t._v(" "),n("p",[t._v("在做前端缓存时，我们尽可能设置长时间的强缓存，通过文件名加hash的方式来做版本更新。\n在代码分包的时候，应该将一些不常变的公共库独立打包出来，使其能够更持久的缓存。")])])}),[],!1,null,null,null);s.default=e.exports}}]);