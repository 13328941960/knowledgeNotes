(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{114:function(t,a,r){"use strict";r.r(a);var s=r(0),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"内存问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内存问题"}},[t._v("#")]),t._v(" 内存问题")]),t._v(" "),r("h2",{attrs:{id:"垃圾收集"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集"}},[t._v("#")]),t._v(" 垃圾收集")]),t._v(" "),r("p",[t._v("JavaScript 具有自动垃圾收集机制。\n这种垃圾收集机制的原理：找到那些不在继续使用的变量，然后释放其占用的内存。\n垃圾收集器会按照固定的时间间隔来执行这一操作。")]),t._v(" "),r("h3",{attrs:{id:"标记清除"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#标记清除"}},[t._v("#")]),t._v(" 标记清除")]),t._v(" "),r("p",[t._v("JavaScript 中最经常用的垃圾收集方式是"),r("strong",[t._v("标记清除")]),t._v("。当变量进入环境时，就将这个变量标记为“进入环境”。\n当变量离开环境时，则将其标记为“离开环境”。")]),t._v(" "),r("h3",{attrs:{id:"引用计数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#引用计数"}},[t._v("#")]),t._v(" 引用计数")]),t._v(" "),r("p",[t._v("另一个不太常见的垃圾收集策略叫作"),r("strong",[t._v("引用计数")]),t._v("。引用计数的含义时跟踪记录每个值被引用的次数，\n当这个值的引用次数变成0时，则回收其内存。")])])}),[],!1,null,null,null);a.default=e.exports}}]);